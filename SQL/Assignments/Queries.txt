													CREATE DATABASE
=> create datbase NucleusTeq;
=> use NucleusTeq;

													CREATE TABLES

=> CREATE TABLE teacher(id INT PRIMARY KEY AUTO_INCREMENT,teacher_name VARCHAR(50));

=> CREATE TABLE course(id INT PRIMARY KEY AUTO_INCREMENT, course_name VARCHAR(50),teacher_id INT, FOREIGN KEY (teacher_id) REFERENCES teacher (id));

=> CREATE TABLE student(id INT PRIMARY KEY AUTO_INCREMENT,student_name VARCHAR(50),course_id INT,FOREIGN KEY (course_id) REFERENCES course (id));

=> CREATE TABLE employee(emp_id INT PRIMARY KEY,name VARCHAR(50),salary DECIMAL(10,2),age INT);

													DESCRIBE TABLES

=> desc teacher;
=> desc course;
=> desc student;

												INSERT VALUES IN THE TABLES


=> INSERT INTO teacher (id, teacher_name) VALUES
  (1, 'Khan Sir'),
  (2, 'Prashant Dhawan'),
  (3, 'Ankit Awasthi');

=> INSERT INTO course (id, course_name, teacher_id) VALUES
  (1, 'History', 1),
  (2, 'Geopolitics', 2),
  (3, 'World Geography', 3);

=> INSERT INTO student (id, student_name, course_id) VALUES
  (1, 'Madhur Jatiya', 1),
  (2, 'Anurag Jain', 1),
  (3, 'Lokesh Nargesh', 2),
  (4, 'Rani Ahire', 3);
  (5, 'Komal Jain', 1),
  (6, 'Rahul Gupta', 2),
  (7, 'Amit Singh', 3),
  (8, 'Neha Verma', 3),
  (9, 'Sanjay Kumar', 2),
  (10, 'Soniya Singh', 1),
  (11, 'Ajay Verma', 1),
  (12, 'Pooja Sharma', 3),
  (13, 'Rohit Gupta', 2),
  (14, 'Ritu Yadav', 1);

=> INSERT INTO employee (emp_id, name, salary, age) VALUES
  (1, 'Rajesh Kumar', 50000, 30),
  (2, 'Priya Gupta', 65000, 35),
  (3, 'Vikram Singh', 45000, 28),
  (4, 'Anjali Sharma', 55000, 32),
  (5, 'Nitin Patel', 60000, 37),
  (6, 'Shalini Desai', 70000, 40),
  (7, 'Sanjay Singh', 48000, 29),
  (8, 'Manisha Choudhary', 52000, 31),
  (9, 'Amit Kumar', 58000, 36),
  (10, 'Swati Mehta', 62000, 34);
												SQL Aggregate Functions

Sum => select sum(salary) as total_salary from employee;
Min => select min(salary) as lowest_salary from employee;
Max => select max(salary) as higest_salary from employee;
Avg => select avg(salary) as average_salary from employee;
Count => select count(emp_id) as total_employees from employee;

												Group By and Having

Group By => select course_name, count(course_id) as total_students from student join course on student.course_id = course.id  group by course_id;
Having => select course_id,count(student_name) as total_students from student group by course_id having count(student_name)>5;






